version: "3"

dotenv:
  - .env

tasks:
  run:
    cmds:
      - cargo run --bin api | bunyan
  test:
    cmds:
      - cargo test -- --test-threads=1
  container-up:
    cmds:
      - docker-compose up -d
  container-down:
    cmds:
      - docker-compose down --remove-orphans --volumes
  database-install-migrator:
    cmds:
      - cargo install sqlx-cli --no-default-features --features rustls,postgres --locked
  database-add-migration:
    desc: "Create a new SQL migration file using sqlx-cli, e.g. task database-add-migration -- create_users_table"
    cmds:
      - sqlx migrate add {{.CLI_ARGS}} --source migrations/
  database-migrate:
    desc: "Run all pending migrations using sqlx-cli"
    cmds:
      - sqlx migrate run --source migrations/ --database-url $DATABASE_URL
  database-prepare-offline:
    desc: "Prepare the query metadata for sqlx offline use"
    cmds:
      - cargo sqlx prepare --workspace -- --all-targets
  docker-build-*:
    vars:
      BIN: "{{index .MATCH 0}}"
    cmds:
      - docker build -t zero2prod-api --build-arg BIN={{.BIN}} .
  check-format:
    desc: "Check if code is well formatted by cargo fmt"
    cmds:
      - cargo +nightly fmt --check
  check-lint:
    desc: "Check if code is well written by clippy"
    cmds:
      - cargo clippy -- -D warnings
